#IMAGE_TAG: "1.4.4"
#FABRIC: "1.4.4"
IMAGE_TAG: "2.2.1"
FABRIC: "2.2.1"
THIRDPARTY: "0.4.16"
CCENV_DOCKER_IMAGE: "hyperledger/fabric-ccenv:{{ IMAGE_TAG }}"
#GOLANGRUNTIME_DOCKER_IMAGE:
#NODEJSRUNTIME_DOCKER_IMAGE:
#JAVARUNTIME_DOCKER_IMAGE: "hyperledger/fabric-javaenv:2.2.0"
CA_IMAGE_TAG: "1.4.9"

# Should be used in Docker bridged mode See the templates for network communication in this mode
NET_NAME: "uncomment_in_file_for_bridged_mode"
BRIDGED_MODE: true
BRIDGED_IP_PREFIX: "172.33.0."
#"172.17.100."
PEER_NETWORK: "peer_configs_peer"

# How many tasks should be run in parallel during execution of Ansible
RUN_LOCAL: false
SERIAL_EXECUTION_NUMBER: 0
SERIAL_EXECUTION: "{% if RUN_LOCAL -%}1{% else %}{{SERIAL_EXECUTION_NUMBER}}{% endif %}"
# The default hostset for Ansible, can be overwritten or set Please pay attention for variable prioritization, see:
# https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html
# hostset: "local"

CONFIG_PATH: "templates"
MAIN_PATH: "{{ playbook_dir }}"
MAIN_CONFIG_PATH: "{{MAIN_PATH}}/{{CONFIG_PATH}}"

SCRIPTS_PATH: "{{ MAIN_PATH }}/scripts"
BASE_PATH: "/home/parallels/FINAL_graphene_corda_latest_xxx"

LOCAL_CHAINCODE_PATH: "{{ BASE_PATH }}/Schreibtisch/chaincode_provision"
LOCAL_CRYPTO_PATH: "{{ BASE_PATH }}/Schreibtisch/binaries_provision"

LOCAL_SAMPLE_PATH: "{{ BASE_PATH }}/Schreibtisch/samples"
LOCAL_BINARY_PATH: "{{ BASE_PATH }}/Schreibtisch/binaries"

# These values will be the ones Hyperledger Fabric CA will bootstrapped with
# Check the client application for these values in order to be able to request certificates
CA_ADMIN_USERNAME: "admin"
CA_ADMIN_PASSWORD: "admin"

JAVA_CHAINCODE_PATH: "{{ BASE_PATH }}/Schreibtisch/java-chaincode"
JAVA_CHAINCODE_BUILD: "false"
FORCE_JAVA_CHAINCODE_CLONE: "false"

ORDERER_START_PORT: 27000
KAFKA_START_PORT: 37000

# Whether to use one Orderer or multiple Orderers with the help of Apache Kafka
KAFKA_RAFT_OR_SOLO: "etcdraft"
BATCH_TIMEOUT_VALUE: 1
BATCH_TIMEOUT: "{{ BATCH_TIMEOUT_VALUE }}s"

MAX_MESSAGES: 100

ABSOLUTE_MAX: "98 MB"
PREFERRED_MAX: "512 KB"
# No channel limit will be defined
MAX_CHANNELS: 0

# Set any preferred Orderer which will be used during Ansible execution
PREFERRED_ORDERER_TO_CREATE_CHANNEL: orderer0.ordererone.com
PREFERRED_ORDERER_DOMAIN_ONLY_TO_CREATE_CHANNEL: "{{ PREFERRED_ORDERER_TO_CREATE_CHANNEL.split('.')[-2] }}.{{ PREFERRED_ORDERER_TO_CREATE_CHANNEL.split('.')[-1] }}"
PREFERRED_ORDERER_WITH_PORT_TO_CREATE_CHANNEL: "{{ PREFERRED_ORDERER_TO_CREATE_CHANNEL }}:27000"
PREFERRED_ORDERER_MSPDIR: "{{ organizations_config.2.mspdir }}"
PREFERRED_CLI_CHANNEL_CREATION: "cli.peerone.com"

# If there are problems during provisioning it might be useful to wait longer before continuing with some processes, like channel creation
# There may be some race conditions during Chaincode instantiation so this value should be set to BATCH_TIMEOUT plus some additional value
DEFAULT_SLEEP_TIME_SUM: "{{ BATCH_TIMEOUT_VALUE + 2 }}"
DEFAULT_SLEEP_TIME: "{{ DEFAULT_SLEEP_TIME_SUM | string }}"

CHAINCODE_LANGUAGE: "golang"

CHANNEL_NAME: "testchannel"
PRUNE_DOCKER: true
PRUNE_CHAINCODE: true

ENABLE_COUCHDB: true

# The Chaincode version used for upgrading the Chaincode
CHAINCODE_VERSION: "5.0"

"additional_channels": ["{{ CHANNEL_NAME }}"]
#"{{ CHANNEL_NAME }}", "mcos", "vm"

# Chaincodes to remove during removal process or re-provisioning
"remove_chaincodes":
  ["server", "message", "server_java", "message_java", "racecondition", "simple"]

# Additional channels and their main organizations
# Mainly used with the Hyperledger Explorer
# See for example: https://jira.hyperledger.org/browse/BE-545
"additional_channels_with_orgs": [
    {
      "name": "{{ additional_channels.0 }}",
      "org": "{{ organizations_config.0.name }}",
    },
    {
      "name": "{{ additional_channels.1 }}",
      "org": "{{ organizations_config.0.name }}",
    },
  ]

"chaincodes": [
##    {
# For the correct naming conventions please see the Chaincode folder structure or the provisioning files
# Chaincode in Golang is generally named with chaincodeName/go (see folder structure)
# Chaincode in Java is generally named with chainCodeName/
# A slash is mandatory as everything before the slash will be used for the Chaincode name
##      "name": "server/go",
# ! is substituted with \\" during executions
##      "args": "{!Args!: [!init!]}",
##      "language": "{{ CHAINCODE_LANGUAGE }}",
      # Any endorsing policy can be set
#"policy": "-P !AND('Org1.member', 'Org2.member')!",
##    },
##    {
##      "name": "message/go",
##      "args": "{!Args!: [!init!]}",
##      "language": "{{ CHAINCODE_LANGUAGE }}",
#"policy": "-P !AND('Org1.member', 'Org2.member')!",
##    },
##    {
##      "name": "server_java/",
##      "args": "{!Args!: [!init!]}",
##      "language": "java",
#"policy": "-P !AND('Org1.member', 'Org2.member')!",
##    },
##    {
##      "name": "message_java/",
##      "args": "{!Args!: [!init!]}",
##      "language": "java",
#"policy": "-P !AND('Org1.member', 'Org2.member')!",
##    },
#    {
#      "name": "racecondition/go",
#      "args": "{!Args!: [!init!]}",
#      "language": "{{ CHAINCODE_LANGUAGE }}",
#    },
    {
      "name": "bubbleSort/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    },
    {
      "name": "heapSort/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    },
    {
      "name": "quickSortRec/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    }, 
    {
      "name": "smallbank/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    },
    {
      "name": "recursion/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    },
    {
      "name": "memory/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    },
    {
      "name": "loop/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    },
    {
      "name": "key_value/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    },
    {
      "name": "io/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    },
    {
      "name": "doNothing/go",
      "args": "{!Args!: [!init!]}",
      "language": "{{ CHAINCODE_LANGUAGE }}",
    },
  ]

# Set any preferred Peer which will be used during Ansible execution
PREFERRED_CORE_PEER_LOCALMSPID: "{{ organization_ids.0.id }}"
PREFERRED_CORE_PEER_ADDRESS: "peer0.peerone.com:7000"
PREFERRED_CORE_PEER_MSPCONFIGPATH: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{{ certificates_config_peer.0.domain }}/users/Admin@{{ certificates_config_peer.0.domain }}/msp"
CORE_PEER_TLSCA_ROOTCERT_FILE: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{{ certificates_config_peer.0.domain }}/tlsca/tlsca.{{ certificates_config_peer.0.domain }}-cert.pem"
CORE_PEER_TLS_ROOTCERT_FILE: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{{ certificates_config_peer.0.domain }}/peers/peer0.{{ certificates_config_peer.0.domain }}/tls/ca.crt"

DOCKER_ATTACHSTDOUT: true

# Peers which should not join a channel (wasn't tested extensively, may cause bugs)
"peers_to_exclude_from_channel_join": []

# Peers which should not get Chaincode installed (wasn't tested extensively, may cause bugs)
"peers_to_exclude_from_chaincode": []

# Channels which should not initiate Chaincode (wasn't tested extensively, may cause bugs)
"channels_to_exclude_from_chaincode": []

# Organization IDs
"organization_ids": [{ "id": "Org1" }, { "id": "Org2" }, { "id": "Orderer" }, { "id": "Orderer222" }]

# Certification information for Peers and Orderers (below)
# number indicates the number of Peers and Orderer certificates should be created for
# id is th MSPID
"certificates_config_peer":
  [
    {
      "domain": "peerone.com",
      "number": 2,
      "id": "{{ organization_ids.0.id }}",
      "hostname": "peer",
    },
    {
      "domain": "peertwo.com",
      "number": 2,
      "id": "{{ organization_ids.1.id }}",
      "hostname": "peer",
    },
  ]

"certificates_config_orderer":
  [
    {
      "number": 5,
      "id": "{{ organization_ids.2.id }}",
      "hostname": "orderer",
      "domain": "ordererone.com",
    },
    {
      "number": 6,
      "id": "{{ organization_ids.3.id }}",
      "hostname": "orderer",
      "domain": "orderertwo.com",
    }
  ]

# Defines organizations with name, MSPID, MSPDIR, type (currently organization and orderer_organization)
# General hint: Iff there are problems during provisioning after these values have been changed, please check the order of every change made, as values rely on other ones
# For example: hostvars[groups['orderer'][0]]['inventory_hostname']... will get its value from the Ansible hosts files
# Might be improved in further versions
"organizations_config":
  [
    {
      "tag": "Org1",
      "name": "Organization1",
      "id": "{{ organization_ids.0.id }}",
      "mspdir": "{{ LOCAL_CRYPTO_PATH }}/crypto-config/peerOrganizations/{{ certificates_config_peer.0.domain }}",
      "type": "organization",
      "adminprincipal": "Role.ADMIN",
      "anchorpeers":
        [{ "anchorpeerhost": "peer0.peerone.com", "anchorpeerport": "7000" }],
    },
        {
      "tag": "Org2",
      "name": "Organization2",
      "id": "{{ organization_ids.1.id }}",
      "mspdir": "{{ LOCAL_CRYPTO_PATH }}/crypto-config/peerOrganizations/{{ certificates_config_peer.1.domain }}",
      "type": "organization",
      "adminprincipal": "Role.ADMIN",
      "anchorpeers":
        [{ "anchorpeerhost": "peer0.peertwo.com", "anchorpeerport": "7100" }],
    },
    {
      "tag": "Orderer",
      "name": "OrdererOrg",
      "id": "{{ organization_ids.2.id }}",
      "mspdir": "{{ LOCAL_CRYPTO_PATH }}/crypto-config/ordererOrganizations/{{ hostvars[groups['orderer'][0]]['inventory_hostname'].split('.')[-2] }}.{{ hostvars[groups['orderer'][0]]['inventory_hostname'].split('.')[-1] }}",
      "type": "orderer_organization",
      "adminprincipal": "Role.ADMIN",
    },
    {
      "tag": "Orderer222",
      "name": "OrdererOrg222",
      "id": "{{ organization_ids.3.id }}",
      "mspdir": "{{ LOCAL_CRYPTO_PATH }}/crypto-config/ordererOrganizations/{{ hostvars[groups['orderer'][5]]['inventory_hostname'].split('.')[-2] }}.{{ hostvars[groups['orderer'][5]]['inventory_hostname'].split('.')[-1] }}",
      "type": "orderer_organization",
      "adminprincipal": "Role.ADMIN",
    },
  ]

GO_MOD_VENDOR: true
GO_MOD_VENDOR_PATH: "/opt/gopath/src/"

TELEGRAF_URL: "https://dl.influxdata.com/telegraf/releases/telegraf-1.18.0_linux_amd64.tar.gz"
BUILD_TELEGRAF: no

INFLUXDB_ADMIN_USER: "admin"
INFLUXDB_ADMIN_PASSWORD: "admin"
INFLUXDB_USER: "lrdata"
INFLUXDB_USER_PASSWORD: "lrdata"
INFLUXDB_VERSION: "1.8.4"
REBUILD_GRAFANA_DOCKERFILE: "yes"
DOCKERFILE_GRAFANA: "grafana"

INIT: true
COMMON: true
