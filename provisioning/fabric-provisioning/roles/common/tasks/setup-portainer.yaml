- name: Check if operating system is Ubuntu
  fail: msg="Please use Ubuntu as operating system."
  when: ansible_distribution != 'Ubuntu'
- name: Get container status
  shell: docker inspect --format={{ '{{.State.Running}}' }} portainer
  register: status
  failed_when: status.rc != 1 and status.rc != 0
- name: Pull Portainer image
  docker_image:
    name: "portainer/portainer:{{ PORTAINER_VERSION }}"
    tag: "portainer"
  when: status.stdout != "true"
- name: Create Portainer volume
  docker_volume:
    name: portainer_data
  when: status.stdout != "true"
- name: Start Portainer on {{ inventory_hostname }}
  docker_container:
    name: portainer
    image: "portainer/portainer:{{ PORTAINER_VERSION }}"
    restart_policy: always
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data portainer/portainer
  when: status.stdout != "true"
- name: Wait for container
  wait_for:
    port: "9000"
    host: "{{inventory_hostname}}"
- name: Set admin user and admin password
  uri:
    url: "http://{{inventory_hostname}}:9000/api/users/admin/init"
    method: POST
    return_content: yes
    body_format: json
    body: '{ "username":"{{ PORTAINER_USER }}", "password":"{{ PORTAINER_PASSWORD }}"}'
- name: Generate authentication token
  uri:
    url: "http://{{inventory_hostname}}:9000/api/auth"
    method: POST
    return_content: yes
    body_format: json
    body: '{ "username":"{{ PORTAINER_USER }}", "password":"{{ PORTAINER_PASSWORD }}"}'
  register: auth_token
- name: Define Endpoints
  uri:
    url: "http://{{inventory_hostname}}:9000/api/endpoints"
    method: POST
    return_content: yes
    headers:
      Authorization: "{{ (auth_token.content|from_json).jwt }}"
    body: '{% if item == "localhost" or item == "127.0.0.1" %}Name=localhost&EndpointType=1{% else %}Name={{ item }}&EndpointType=1&URL=http://{{ item }}%3A2375&PublicURL=http://{{ item }}{% endif %}'
  when: hostvars[item]['executor_main'] is not defined
  loop: "{{ groups['realservers'] }}"
  ignore_errors: yes
