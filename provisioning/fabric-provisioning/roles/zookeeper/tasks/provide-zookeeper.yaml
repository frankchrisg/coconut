- name: Check if operating system is Ubuntu
  fail: msg="Please use Ubuntu as operating system."
  when: ansible_distribution != 'Ubuntu'
- name: Create Apache ZooKeeper Docker configuration file
  template:
    src: "{{ MAIN_CONFIG_PATH }}/zookeeper.j2"
    dest: "{{ MAIN_CONFIG_PATH }}/zookeeper_configs/{{ item }}.yaml"
  loop: "{{ groups['zookeeper'] }}"
  loop_control:
    index_var: my_idx
  when: inventory_hostname == item and KAFKA_RAFT_OR_SOLO == "kafka"
  tags:
  - bm-set
- name: Create Apache ZooKeeper telegraf configuration file
  template:
    src: "{{ MAIN_CONFIG_PATH }}/telegraf-container.j2"
    dest: "{{ MAIN_CONFIG_PATH }}/zookeeper_configs/telegraf_{{ item }}.conf"
  loop: "{{ groups['zookeeper'] }}"
  loop_control:
    index_var: my_idx
  when: inventory_hostname == item and KAFKA_RAFT_OR_SOLO == "kafka"
  tags:
  - bm-set
- name: Create Apache ZooKeeper configuration file
  template:
    src: "{{ MAIN_CONFIG_PATH }}/zookeeper_config.j2"
    dest: "{{ MAIN_CONFIG_PATH }}/zookeeper_configs/{{ item }}_config.cfg"
  loop: "{{ groups['zookeeper'] }}"
  loop_control:
    index_var: my_idx
  when: inventory_hostname == item and KAFKA_RAFT_OR_SOLO == "kafka"
  tags:
  - bm-set
- name: Find files on remote machine
  find:
    paths: "{{ MAIN_CONFIG_PATH }}/zookeeper_configs"
    patterns: "*.yaml"
  register: output
  when: KAFKA_RAFT_OR_SOLO == "kafka"
  tags:
  - bm-set

- name: Stop ZooKeeper containers
  docker_compose:
    project_src: "{{ MAIN_CONFIG_PATH }}/zookeeper_configs"
    files: "{{ item.path | basename }}"
    remove_volumes: yes
    state: absent
  loop: "{{ output.files|flatten(levels=1) }}"
  throttle: 1
  when: KAFKA_RAFT_OR_SOLO == "kafka"
  tags:
  - bm-rem

- name: Run ZooKeeper containers  
  docker_compose:
    project_src: "{{ MAIN_CONFIG_PATH }}/zookeeper_configs"
    files: "{{ item.path | basename }}"
    recreate: always
  loop: "{{ output.files|flatten(levels=1) }}"
  throttle: 1
  when: KAFKA_RAFT_OR_SOLO == "kafka"
  tags:
  - bm-run
  
- name: Add IP addresses to container
  shell: "echo \"echo {{ hostvars[item]['serverip'] }} {{item}} >> /etc/hosts\" | docker exec -i {{ inventory_hostname }} /bin/sh -"
  when: BRIDGED_MODE and hostvars[item]['serverip'] is defined and KAFKA_RAFT_OR_SOLO == "kafka"
  loop: "{{ groups.all }}"
  tags:
  - bm-set
