# Java-Chaincode is only supported with Hyperledger Fabric version 1.3 and newer versions
- name: Check if operating system is Ubuntu
  fail: msg="Please use Ubuntu as operating system."
  when: ansible_distribution != 'Ubuntu'
- name: Check if Hyperledger Fabric version is greater than 1.2
  fail: msg="Please use Hyperledger Fabric 1.3 and newer to use Java Chaincodes."
  when: (IMAGE_TAG.split(".")[0] + "." + IMAGE_TAG.split(".")[1])|float < 1.3
- name: Clone Fabric-Java-Chaincode
  git:
    repo: "https://github.com/hyperledger/fabric-chaincode-java.git"
    dest: "{{ JAVA_CHAINCODE_PATH }}"
    version: master
    force: "{{ FORCE_JAVA_CHAINCODE_CLONE }}"
  throttle: 5
  when: JAVA_CHAINCODE_BUILD != "false"
- name: "Get sdkman"
  shell: "sh -c 'export SDKMAN_DIR=/root/.sdkman && curl -s https://get.sdkman.io | bash'"
  args:
    warn: no
  become: true
#- name: Get current user
#  command: whoami
#  register: current_user
#  become: true
#- name: Set gradle version
#  shell: "$(which chmod) +x /{{ current_user.stdout }}/.sdkman/bin/sdkman-init.sh && source /{{ current_user.stdout }}/.sdkman/bin/sdkman-init.sh && sdk install gradle {{ GRADLE_VERSION }} && sdk default gradle {{ GRADLE_VERSION }}"
#  args:
#    executable: /bin/bash
#  become: true
- name: Delete fail on erroneous javadoc in fabric-chaincode-shim/build.gradle
  lineinfile: 
    dest: "{{ JAVA_CHAINCODE_PATH }}/fabric-chaincode-shim/build.gradle"
    line: "    failOnError = false"
    regexp: "    failOnError = true"
  when: JAVA_CHAINCODE_BUILD != "false"
  ignore_errors: true
- name: gradlew clean
  shell: "./gradlew clean"
  args:
    chdir: "{{ JAVA_CHAINCODE_PATH }}"  
  when: JAVA_CHAINCODE_BUILD != "false"
- name: gradlew build
  shell: "./gradlew build -x test"
  args:
    chdir: "{{ JAVA_CHAINCODE_PATH }}"  
  when: JAVA_CHAINCODE_BUILD != "false"
- name: gradlew install
  shell: "./gradlew install"
  args:
    chdir: "{{ JAVA_CHAINCODE_PATH }}"  
  when: JAVA_CHAINCODE_BUILD != "false"
#- name: Build required jars
#  shell: "gradle clean && gradle build -x test && gradle install"
#  args:
#    chdir: "{{ JAVA_CHAINCODE_PATH }}"
#  when: JAVA_CHAINCODE_BUILD != "false"
- name: Check if image exists
  shell: "docker images hyperledger/fabric-javaenv | wc -l"
  register: exists
- name: Debug output with result if image exists
  debug:
    msg: "Chaincode image exists: {{ exists.stdout|int >= 1 }}"
- name: Build docker image
  shell: "./gradlew buildImage -x test"
  args:
    chdir: "{{ JAVA_CHAINCODE_PATH }}"  
  run_once: yes
  when: JAVA_CHAINCODE_BUILD != "false"
