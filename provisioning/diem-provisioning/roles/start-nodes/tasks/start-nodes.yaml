- name: Create node configuration
  template:
    src: "{{ MAIN_CONFIG_PATH }}/node-compose.j2"
    dest: "{{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/{{ inventory_hostname }}-compose.yaml"
  tags:
  - bm-set
- name: Copy telegraf configuration to host
  copy:
    src: "{{ item }}"
    dest: "{{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/{{ inventory_hostname }}/diem-node-{{ groups['node'].index(inventory_hostname) }}_telegraf.conf"
  with_fileglob:
    - "{{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/{{ inventory_hostname }}/diem-node-{{ groups['node'].index(inventory_hostname) }}_telegraf.conf"
  tags:
  - bm-set
- name: Create node start script
  template:
    src: "{{ MAIN_CONFIG_PATH }}/start-node.j2"
    dest: "{{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/{{ inventory_hostname }}/diem-node-{{ groups['node'].index(inventory_hostname) }}-start-script.sh"
  tags:
  - bm-set
- name: Find files on remote machine (Nodes)
  find:
    paths: "{{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/"
    patterns: "{{ inventory_hostname }}-compose.yaml"
  register: output
  tags:
  - bm-set

- name: Stop node containers
  docker_compose:
    project_src: "{{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/"
    files: "{{ item.path | basename }}"
    remove_volumes: yes
    state: absent
  loop: "{{ output.files|flatten(levels=1) }}"
  throttle: 1
  tags:
  - bm-rem
- name: Run node containers
  docker_compose:
    project_src: "{{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/"
    files: "{{ item.path | basename }}"
    recreate: always
  loop: "{{ output.files|flatten(levels=1) }}"
  retries: "{{ RETRIES_DOCKER }}"
  delay: "{{ DELAY_DOCKER }}"
  register: docker_res
  until: "docker_res.services[inventory_hostname][inventory_hostname].state.status | default('') == 'running'"
  throttle: 1
  tags:
  - bm-run

# {{ docker_res.results.0.services[inventory_hostname][inventory_hostname].state.status }}
#- name: Run node containers
#  shell: "cd {{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/generated_files/ && $(which docker-compose) -f {{ item.path | basename }} up -d"
#  loop: "{{ output.files|flatten(levels=1) }}"
#  retries: "{{ RETRIES_DOCKER }}"
#  delay: "{{ DELAY_DOCKER }}"
#  register: docker_res
#  until: docker_res.rc | default('') == 0

- name: Initialise telegraf 
#  shell: "echo 'curl -sL https://repos.influxdata.com/influxdb.key | apt-key add - && apt-add-repository \"deb https://repos.influxdata.com/ubuntu bionic stable\" && apt-get update && apt-get install -y -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" telegraf && service telegraf restart' | docker exec -i {{ inventory_hostname }} /bin/bash -"
  shell: "echo 'service telegraf restart' | docker exec -i {{ inventory_hostname }} /bin/bash -"
  tags:
  - bm-set
- name: Add hostname to hosts
  shell: 'echo "echo \"127.0.0.1\" $(hostname) >> /etc/hosts" | docker exec -i {{ inventory_hostname }} /bin/bash -'
  tags:
  - bm-set
- name: Add IP addresses to container
  shell: "echo \"echo {{ hostvars[item]['serverip'] }} {{item}} >> /etc/hosts\" | docker exec -i {{ inventory_hostname }} /bin/bash -"
  when: BRIDGED_MODE and hostvars[item]['serverip'] is defined
  loop: "{{ groups.all }}"
  tags:
  - bm-set
- name: Run start script
  shell: "echo \"chmod +x {{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/{{ inventory_hostname }}/diem-node-{{ groups[\"node\"].index(inventory_hostname) }}-start-script.sh && bash {{ DIEM_CONFIGURATION_PATH_AND_DOCKER_COMPOSE_PATH }}/{{ inventory_hostname }}/diem-node-{{ groups[\"node\"].index(inventory_hostname) }}-start-script.sh\" | docker exec -i {{ inventory_hostname }} /bin/bash -"
  tags:
  - bm-run
