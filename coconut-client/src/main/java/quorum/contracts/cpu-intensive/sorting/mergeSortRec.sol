contract mergeSortRec {

    event sorted(string eventType, string signature);

    function mergesort(int[] memory A, int l, int r) public {
        if (l < r) {
            int q = (l + r) / 2;
            mergesort(A, l, q);
            mergesort(A, q + 1, r);
            merge(A, l, q, r);
        }
    }

    function main(int[] memory A, int l, int r, string memory sig) public {
        mergesort(A, l, r);
        emit sorted("sort/mergeSortRec", sig);
    }

    function merge(int[] memory A, int l, int q, int r) internal pure {
        int[] memory B = new int[](A.length);
        for (int i = l; i <= q; i++) {
            B[uint(i)] = A[uint(i)];
        }
        for (int j = q + 1; j <= r; j++) {
            B[uint(r + q + 1 - j)] = A[uint(j)];
        }
        int s = l;
        int t = r;
        for (int k = l; k <= r; k++) {
            if (B[uint(s)] <= B[uint(t)]) {
                A[uint(k)] = B[uint(s)];
                s++;
            } else {
                A[uint(k)] = B[uint(t)];
                t--;
            }
        }
    }

}

// 608060405234801561001057600080fd5b5061057e806100206000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c010000000000000000000000000000000000000000000000000000000090048063622e505d146100585780638848040c14610124575b600080fd5b6101226004803603606081101561006e57600080fd5b810190808035906020019064010000000081111561008b57600080fd5b82018360208201111561009d57600080fd5b803590602001918460208302840111640100000000831117156100bf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050610287565b005b6102856004803603608081101561013a57600080fd5b810190808035906020019064010000000081111561015757600080fd5b82018360208201111561016957600080fd5b8035906020019184602083028401116401000000008311171561018b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803590602001906401000000008111156101ff57600080fd5b82018360208201111561021157600080fd5b8035906020019184600183028401116401000000008311171561023357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102cc565b005b808212156102c757600060028284018161029d57fe5b0590506102ab848483610287565b6102b9846001830184610287565b6102c5848483856103b2565b505b505050565b6102d7848484610287565b7f922b44b8550af663bbba20b89499fc7810246a73cb79dad962e7f00d28c54f4d81604051808060200180602001838103835260118152602001807f736f72742f6d65726765536f7274526563000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015610371578082015181840152602081019050610356565b50505050905090810190601f16801561039e5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b606084516040519080825280602002602001820160405280156103e45781602001602082028038833980820191505090505b50905060008490505b83811361042d5785818151811061040057fe5b602002602001015182828151811061041457fe5b60200260200101818152505080806001019150506103ed565b5060006001840190505b82811361047e5785818151811061044a57fe5b60200260200101518282600187870101038151811061046557fe5b6020026020010181815250508080600101915050610437565b506000849050600083905060008690505b84811361053f578382815181106104a257fe5b60200260200101518484815181106104b657fe5b6020026020010151136104fc578383815181106104cf57fe5b60200260200101518882815181106104e357fe5b6020026020010181815250508280600101935050610532565b83828151811061050857fe5b602002602001015188828151811061051c57fe5b6020026020010181815250508180600190039250505b808060010191505061048f565b505050505050505056fea265627a7a723158209037fefd8b0e521341f01e807e48f6db9db7664621607154e77bc5ad3390edb464736f6c634300050c0032

// [{"anonymous":false,"name":"sorted","inputs":[{"indexed":false,"name":"eventType","type":"string","internalType":"string"},{"indexed":false,"name":"signature","type":"string","internalType":"string"}],"type":"event","payable":false},{"constant":false,"name":"main","inputs":[{"name":"A","type":"int256[]","internalType":"int256[]"},{"name":"l","type":"int256","internalType":"int256"},{"name":"r","type":"int256","internalType":"int256"},{"name":"sig","type":"string","internalType":"string"}],"outputs":[],"type":"function","payable":false,"stateMutability":"nonpayable"},{"constant":false,"name":"mergesort","inputs":[{"name":"A","type":"int256[]","internalType":"int256[]"},{"name":"l","type":"int256","internalType":"int256"},{"name":"r","type":"int256","internalType":"int256"}],"outputs":[],"type":"function","payable":false,"stateMutability":"nonpayable"}]