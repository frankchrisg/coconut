contract heapSortPartlyRec {

    event sorted(string eventType, string signature);

    int constant k = 2; // 2, 3

    function heapsort(int[] memory A, int l, int r, string memory sig) public {
        buildheap(A, l, r);
        heapsort2(A, l, r);

        emit sorted("sort/heapSortPartlyRec", sig);
    }

    function heapsort2(int[] memory A, int l, int r) internal {
        if (r > l) {
            exchange(A, l, r);
            heapify(A, l, l, r - 1);
            heapsort2(A, l, r - 1);
        }
    }

    function buildheap(int[] memory A, int l, int r) internal {
        buildheap(A, l, r, (r - l - 1) / k);
    }

    function buildheap(int[] memory A, int l, int r, int i) internal {
        if (i >= 0) {
            heapify(A, l, l + i, r);
            buildheap(A, l, r, i - 1);
        }
    }

    function heapify(int[] memory A, int l, int q, int r) internal {
        int largest = l + k * (q - l) + 1;
        if (largest <= r) {

            for (int i = largest + 1; i <= largest + k - 1; i++) {
                if (i <= r && A[uint(i)] > A[uint(largest)]) {
                    largest = i;
                }

                if (A[uint(largest)] > A[uint(q)]) {
                    exchange(A, largest, q);
                    heapify(A, l, largest, r);
                }
            }
        }
    }

    function exchange(int[] memory A, int q, int i) internal pure {
        int tmp = A[uint(q)];
        A[uint(q)] = A[uint(i)];
        A[uint(i)] = tmp;

    }

}

// 608060405234801561001057600080fd5b50610481806100206000396000f3fe608060405234801561001057600080fd5b5060043610610048576000357c010000000000000000000000000000000000000000000000000000000090048063c66b4f1b1461004d575b600080fd5b6101ae6004803603608081101561006357600080fd5b810190808035906020019064010000000081111561008057600080fd5b82018360208201111561009257600080fd5b803590602001918460208302840111640100000000831117156100b457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291908035906020019064010000000081111561012857600080fd5b82018360208201111561013a57600080fd5b8035906020019184600183028401116401000000008311171561015c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101b0565b005b6101bb8484846102a1565b6101c68484846102c1565b7f922b44b8550af663bbba20b89499fc7810246a73cb79dad962e7f00d28c54f4d81604051808060200180602001838103835260168152602001807f736f72742f68656170536f7274506172746c7952656300000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015610260578082015181840152602081019050610245565b50505050905090810190601f16801561028d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b6102bc8383836002600187870303816102b657fe5b056102f7565b505050565b818113156102f2576102d4838383610323565b6102e383838460018503610386565b6102f18383600184036102c1565b5b505050565b6000811261031d5761030d848483860185610386565b61031c848484600185036102f7565b5b50505050565b600083838151811061033157fe5b6020026020010151905083828151811061034757fe5b602002602001015184848151811061035b57fe5b6020026020010181815250508084838151811061037457fe5b60200260200101818152505050505050565b6000600184840360020285010190508181136104455760006001820190505b600160028301038113610443578281131580156103e757508582815181106103c957fe5b60200260200101518682815181106103dd57fe5b6020026020010151135b156103f0578091505b8584815181106103fc57fe5b602002602001015186838151811061041057fe5b6020026020010151131561043657610429868386610323565b61043586868486610386565b5b80806001019150506103a5565b505b505050505056fea265627a7a72315820ac8e2283a4c148db52716766d73cfea23041de5b0037c79de57b4e8b6528c2d064736f6c634300050c0032

// [{"anonymous":false,"name":"sorted","inputs":[{"indexed":false,"name":"eventType","type":"string","internalType":"string"},{"indexed":false,"name":"signature","type":"string","internalType":"string"}],"type":"event","payable":false},{"constant":false,"name":"heapsort","inputs":[{"name":"A","type":"int256[]","internalType":"int256[]"},{"name":"l","type":"int256","internalType":"int256"},{"name":"r","type":"int256","internalType":"int256"},{"name":"sig","type":"string","internalType":"string"}],"outputs":[],"type":"function","payable":false,"stateMutability":"nonpayable"}]