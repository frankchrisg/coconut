contract heapSort {

    event sorted(string eventType, string signature);

    int constant k = 2; // 2, 3

    function heapsort(int[] memory A, int l, int r, string memory sig) public {
        buildheap(A, l, r);
        for (int i = r; i >= l + 1; i--) {
            exchange(A, l, i);
            heapify(A, l, l, i - 1);
        }

        emit sorted("sort/heapSort", sig);
    }

    function buildheap(int[] memory A, int l, int r) internal pure {
        for (int i = (r - l - 1) / k; i >= 0; i--) {
            heapify(A, l, l + i, r);
        }
    }

    function heapify(int[] memory A, int l, int q, int r) internal pure {
        while (true) {
            int largest = l + k * (q - l) + 1;
            if (largest <= r) {
                for (int i = largest + 1; i <= largest + k - 1; i++) {
                    if (i <= r && A[uint(i)] > A[uint(largest)]) {
                        largest = i;
                    }
                }
                if (A[uint(largest)] > A[uint(q)]) {
                    exchange(A, largest, q);
                    q = largest;
                } else {
                    return;
                }
            }
            else {
                return;
            }
        }
    }

    function exchange(int[] memory A, int q, int i) internal pure {
        int tmp = A[uint(q)];
        A[uint(q)] = A[uint(i)];
        A[uint(i)] = tmp;

    }

}

// 608060405234801561001057600080fd5b50610485806100206000396000f3fe608060405234801561001057600080fd5b5060043610610048576000357c010000000000000000000000000000000000000000000000000000000090048063c66b4f1b1461004d575b600080fd5b6101ae6004803603608081101561006357600080fd5b810190808035906020019064010000000081111561008057600080fd5b82018360208201111561009257600080fd5b803590602001918460208302840111640100000000831117156100b457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291908035906020019064010000000081111561012857600080fd5b82018360208201111561013a57600080fd5b8035906020019184600183028401116401000000008311171561015c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101b0565b005b6101bb8484846102cf565b60008290505b6001840181126101f3576101d685858361030e565b6101e585858660018503610371565b8080600190039150506101c1565b507f922b44b8550af663bbba20b89499fc7810246a73cb79dad962e7f00d28c54f4d816040518080602001806020018381038352600d8152602001807f736f72742f68656170536f727400000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b8381101561028e578082015181840152602081019050610273565b50505050905090810190601f1680156102bb5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b60006002600184840303816102e057fe5b0590505b60008112610308576102fa848483860185610371565b8080600190039150506102e4565b50505050565b600083838151811061031c57fe5b6020026020010151905083828151811061033257fe5b602002602001015184848151811061034657fe5b6020026020010181815250508084838151811061035f57fe5b60200260200101818152505050505050565b5b6001156104495760006001848403600202850101905081811361043d5760006001820190505b6001600283010381136103f0578281131580156103da57508582815181106103bc57fe5b60200260200101518682815181106103d057fe5b6020026020010151135b156103e3578091505b8080600101915050610398565b508483815181106103fd57fe5b602002602001015185828151811061041157fe5b602002602001015113156104325761042a85828561030e565b809250610438565b5061044a565b610443565b5061044a565b50610372565b5b5050505056fea265627a7a7231582052e95ea7798e006c4e4756042c4dcb25012cd28a3bbf8cf8088d0fb7fd55d4b264736f6c634300050c0032

// [{"anonymous":false,"name":"sorted","inputs":[{"indexed":false,"name":"eventType","type":"string","internalType":"string"},{"indexed":false,"name":"signature","type":"string","internalType":"string"}],"type":"event","payable":false},{"constant":false,"name":"heapsort","inputs":[{"name":"A","type":"int256[]","internalType":"int256[]"},{"name":"l","type":"int256","internalType":"int256"},{"name":"r","type":"int256","internalType":"int256"},{"name":"sig","type":"string","internalType":"string"}],"outputs":[],"type":"function","payable":false,"stateMutability":"nonpayable"}]