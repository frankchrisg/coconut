contract slowSort {

    event sorted(string eventType, string signature);

    function slowsort(int[] memory A, int i, int j) public {
        if (i >= j) {
            return;
        }
        int m = (i + j) / 2;
        slowsort(A, i, m);
        slowsort(A, m + 1, j);
        if (A[uint(j)] < A[uint(m)]) {
            exchange(A, j, m);
        }
        slowsort(A, i, j - 1);
    }

    function main(int[] memory A, int l, int r, string memory sig) public {
        slowsort(A, l, r);
        emit sorted("sort/slowSort", sig);
    }

    function exchange(int[] memory A, int q, int i) internal pure {
        int tmp = A[uint(q)];
        A[uint(q)] = A[uint(i)];
        A[uint(i)] = tmp;

    }

}

// 608060405234801561001057600080fd5b5061048a806100206000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c010000000000000000000000000000000000000000000000000000000090048063632e91db146100585780638848040c14610124575b600080fd5b6101226004803603606081101561006e57600080fd5b810190808035906020019064010000000081111561008b57600080fd5b82018360208201111561009d57600080fd5b803590602001918460208302840111640100000000831117156100bf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050610287565b005b6102856004803603608081101561013a57600080fd5b810190808035906020019064010000000081111561015757600080fd5b82018360208201111561016957600080fd5b8035906020019184602083028401116401000000008311171561018b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803590602001906401000000008111156101ff57600080fd5b82018360208201111561021157600080fd5b8035906020019184600183028401116401000000008311171561023357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061030c565b005b80821261029357610307565b60006002828401816102a157fe5b0590506102af848483610287565b6102bd846001830184610287565b8381815181106102c957fe5b60200260200101518483815181106102dd57fe5b602002602001015112156102f7576102f68483836103f2565b5b610305848460018503610287565b505b505050565b610317848484610287565b7f922b44b8550af663bbba20b89499fc7810246a73cb79dad962e7f00d28c54f4d816040518080602001806020018381038352600d8152602001807f736f72742f736c6f77536f727400000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156103b1578082015181840152602081019050610396565b50505050905090810190601f1680156103de5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b600083838151811061040057fe5b6020026020010151905083828151811061041657fe5b602002602001015184848151811061042a57fe5b6020026020010181815250508084838151811061044357fe5b6020026020010181815250505050505056fea265627a7a7231582052966b72423ca2526307ac038f907231a9143704bbe8fa0ea79371837bb0025964736f6c634300050c0032

// [{"anonymous":false,"name":"sorted","inputs":[{"indexed":false,"name":"eventType","type":"string","internalType":"string"},{"indexed":false,"name":"signature","type":"string","internalType":"string"}],"type":"event","payable":false},{"constant":false,"name":"main","inputs":[{"name":"A","type":"int256[]","internalType":"int256[]"},{"name":"l","type":"int256","internalType":"int256"},{"name":"r","type":"int256","internalType":"int256"},{"name":"sig","type":"string","internalType":"string"}],"outputs":[],"type":"function","payable":false,"stateMutability":"nonpayable"},{"constant":false,"name":"slowsort","inputs":[{"name":"A","type":"int256[]","internalType":"int256[]"},{"name":"i","type":"int256","internalType":"int256"},{"name":"j","type":"int256","internalType":"int256"}],"outputs":[],"type":"function","payable":false,"stateMutability":"nonpayable"}]