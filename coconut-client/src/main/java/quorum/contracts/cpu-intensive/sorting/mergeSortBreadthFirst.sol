contract mergeSortBreadthFirst {

    event sorted(string eventType, string signature);

    // even only **2
    function mergesort(int[] memory A, int l, int r, string memory sig) public {
        for (int m = 1; m <= r - l; m = m + m) {
            for (int i = l; i <= r; i = i + m * 2) {
                merge(A, i, i + m - 1, i + 2 * m - 1);
            }
        }
        emit sorted("sort/mergeSortBreadthFirst", sig);
    }

    function merge(int[] memory A, int l, int q, int r) internal pure {
        int[] memory B = new int[](A.length);
        for (int i = l; i <= q; i++) {
            B[uint(i)] = A[uint(i)];
        }
        for (int j = q + 1; j <= r; j++) {
            B[uint(r + q + 1 - j)] = A[uint(j)];
        }
        int s = l;
        int t = r;
        for (int k = l; k <= r; k++) {
            if (B[uint(s)] <= B[uint(t)]) {
                A[uint(k)] = B[uint(s)];
                s++;
            } else {
                A[uint(k)] = B[uint(t)];
                t--;
            }
        }
    }

}

// 608060405234801561001057600080fd5b506104a6806100206000396000f3fe608060405234801561001057600080fd5b5060043610610048576000357c0100000000000000000000000000000000000000000000000000000000900480637e9f61ca1461004d575b600080fd5b6101ae6004803603608081101561006357600080fd5b810190808035906020019064010000000081111561008057600080fd5b82018360208201111561009257600080fd5b803590602001918460208302840111640100000000831117156100b457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291908035906020019064010000000081111561012857600080fd5b82018360208201111561013a57600080fd5b8035906020019184600183028401116401000000008311171561015c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101b0565b005b6000600190505b83830381136101fe5760008490505b8381136101f3576101e686826001858501036001866002028601036102da565b60028202810190506101c6565b5080810190506101b7565b507f922b44b8550af663bbba20b89499fc7810246a73cb79dad962e7f00d28c54f4d816040518080602001806020018381038352601a8152602001807f736f72742f6d65726765536f7274427265616474684669727374000000000000815250602001838103825284818151815260200191508051906020019080838360005b8381101561029957808201518184015260208101905061027e565b50505050905090810190601f1680156102c65780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150505050565b6060845160405190808252806020026020018201604052801561030c5781602001602082028038833980820191505090505b50905060008490505b8381136103555785818151811061032857fe5b602002602001015182828151811061033c57fe5b6020026020010181815250508080600101915050610315565b5060006001840190505b8281136103a65785818151811061037257fe5b60200260200101518282600187870101038151811061038d57fe5b602002602001018181525050808060010191505061035f565b506000849050600083905060008690505b848113610467578382815181106103ca57fe5b60200260200101518484815181106103de57fe5b602002602001015113610424578383815181106103f757fe5b602002602001015188828151811061040b57fe5b602002602001018181525050828060010193505061045a565b83828151811061043057fe5b602002602001015188828151811061044457fe5b6020026020010181815250508180600190039250505b80806001019150506103b7565b505050505050505056fea265627a7a7231582065762f0b65dcd0d317eeca9ffea095fb824585331d0be88cec3ddf968d3d53ea64736f6c634300050c0032

// [{"anonymous":false,"name":"sorted","inputs":[{"indexed":false,"name":"eventType","type":"string","internalType":"string"},{"indexed":false,"name":"signature","type":"string","internalType":"string"}],"type":"event","payable":false},{"constant":false,"name":"mergesort","inputs":[{"name":"A","type":"int256[]","internalType":"int256[]"},{"name":"l","type":"int256","internalType":"int256"},{"name":"r","type":"int256","internalType":"int256"},{"name":"sig","type":"string","internalType":"string"}],"outputs":[],"type":"function","payable":false,"stateMutability":"nonpayable"}]