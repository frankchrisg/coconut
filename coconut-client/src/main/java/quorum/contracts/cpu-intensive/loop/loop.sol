contract loop {

    event loopEvent(string eventType, string signature);

    function loopFunc(uint start, uint end, string memory sig) public {
        uint j;
        for (uint i = start; i < end; i++) {
            j = start + i;
        }
        emit loopEvent("loop", sig);
    }

}

// 608060405234801561001057600080fd5b5061024e806100206000396000f3fe608060405234801561001057600080fd5b5060043610610048576000357c010000000000000000000000000000000000000000000000000000000090048063a85602d91461004d575b600080fd5b61011a6004803603606081101561006357600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561009457600080fd5b8201836020820111156100a657600080fd5b803590602001918460018302840111640100000000831117156100c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061011c565b005b6000808490505b8381101561013d5780850191508080600101915050610123565b507f739586e8b5711d8260f35d7adf651c83938e68f3f8fb85708bf956296f19205282604051808060200180602001838103835260048152602001807f6c6f6f7000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156101d85780820151818401526020810190506101bd565b50505050905090810190601f1680156102055780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050505056fea265627a7a723158207c27859b1afb0804e8ea9183b7878406a865fd6ce6bbb0387850c273d6ebc68264736f6c634300050c0032

// [{"anonymous":false,"name":"loopEvent","inputs":[{"indexed":false,"name":"eventType","type":"string","internalType":"string"},{"indexed":false,"name":"signature","type":"string","internalType":"string"}],"type":"event","payable":false},{"constant":false,"name":"loopFunc","inputs":[{"name":"start","type":"uint256","internalType":"uint256"},{"name":"end","type":"uint256","internalType":"uint256"},{"name":"sig","type":"string","internalType":"string"}],"outputs":[],"type":"function","payable":false,"stateMutability":"nonpayable"}]